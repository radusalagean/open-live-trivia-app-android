apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.busytrack.openlivetrivia"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // Private Keys
        buildConfigField("String", "FIREBASE_SERVER_CLIENT_ID",
                "\"" + openLiveTriviaFirebaseServerClientId + "\"")
        buildConfigField("String", "APP_PROJECT_LINK",
                "\"https://github.com/radusalagean/open-live-trivia-app-android\"")
        buildConfigField("String", "APP_PRIVACY_POLICY_LINK",
                "\"https://releasetracker.app/open_live_trivia_privacy_policy.html\"")
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }
    flavorDimensions "environment"
    productFlavors {
        dev {
            dimension "environment"
        }
        prod {
            dimension "environment"
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            def version = variant.versionName
            def buildType = variant.variantData.variantConfiguration.buildType.name
            def flavor = variant.productFlavors[0].name
            outputFileName = "open-live-trivia-${version}-${buildType}-${flavor}.apk"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        disable 'InvalidPackage'
        disable 'SetTextI18n'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true // For Robolectric
        }
    }
}

dependencies {
    implementation project(':openlivetriviainterface')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    implementation "androidx.preference:preference:$preferenceVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.facebook.stetho:stetho:$stethoVersion"
    implementation "com.facebook.stetho:stetho-okhttp3:$stethoVersion"
    implementation "com.google.firebase:firebase-core:$firebasecoreVersion"
    implementation "com.google.firebase:firebase-auth:$firebaseauthVersion"
    implementation "com.google.firebase:firebase-analytics:$firebaseanalyticsVersion"
    implementation "com.crashlytics.sdk.android:crashlytics:$firebasecrashlyticsVersion"
    implementation "com.google.android.gms:play-services-auth:$playservicesauthVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion"
    implementation "io.github.inflationx:calligraphy3:$calligraphy3Version"
    implementation "io.github.inflationx:viewpump:$viewpumpVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    implementation "androidx.viewpager2:viewpager2:$viewpager2Version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.facebook.shimmer:shimmer:$shimmerVersion"

    // JUnit
    testImplementation "junit:junit:$junitVersion"

    // Mock
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitokotlinVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"

    // Coroutines test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // Core library
    testImplementation "androidx.test:core:$androidxTestVersion"

    // Extensions
    testImplementation "androidx.test:core-ktx:$androidxTestVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidxJunitExtVersion"

    // AndroidJUnitRunner and JUnit Rules
    testImplementation "androidx.test:runner:$androidxTestVersion"
    testImplementation "androidx.test:rules:$androidxTestVersion"

    // Assertions
    testImplementation "androidx.test.ext:junit:$androidxJunitExtVersion"
    testImplementation "androidx.test.ext:truth:$androidxTruthExtVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "org.hamcrest:hamcrest:$hamcrestVersion"

    // Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
}
