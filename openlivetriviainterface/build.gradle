plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace "com.busytrack.openlivetriviainterface"
    buildFeatures {
        buildConfig true
    }
    compileSdk rootProject.ext.compileSdk


    defaultConfig {
        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.targetSdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "SOCKET_IO_PATH", "\"/api/socket.io\"")
        buildConfigField("String", "API_PATH", "\"/api/v1/\"")
        buildConfigField("String", "PUBLIC_FOLDER_PATH", "\"/public\"")
        buildConfigField("String", "USER_THUMBNAILS_PATH", "\"/user-thumbnails/\"")
        buildConfigField("String", "USER_THUMBNAILS_EXTENSION", "\".png\"")
        buildConfigField("double", "COST_EXTRA_ANSWER", "1.0")
        buildConfigField("int", "PER_PAGE", "20")
    }
    flavorDimensions = ["environment"]
    productFlavors {
        dev {
            dimension "environment"
            buildConfigField("String", "ROOT_DOMAIN", "\"http://192.168.0.2:3006\"")
            buildConfigField("boolean", "SOCKET_IO_SECURE_CONNECTION", "false")
        }
        prod {
            dimension "environment"
            buildConfigField("String", "ROOT_DOMAIN", "\"https://api.openlivetrivia.com\"")
            buildConfigField("boolean", "SOCKET_IO_SECURE_CONNECTION", "true")
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation ("io.socket:socket.io-client:$socketioVersion") {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }

    // JUnit
    testImplementation "junit:junit:$junitVersion"

    // Mock
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitokotlinVersion"
    testImplementation "org.powermock:powermock-core:$powermockVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powermockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powermockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powermockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$powermockVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"

    // Core library
    testImplementation "androidx.test:core:$androidxTestVersion"

    // Extensions
    testImplementation "androidx.test.ext:junit:$androidxJunitExtVersion"
    testImplementation "androidx.test:core-ktx:$androidxTestVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidxJunitExtVersion"

    // AndroidJUnitRunner and JUnit Rules
    testImplementation "androidx.test:runner:$androidxTestVersion"
    testImplementation "androidx.test:rules:$androidxTestVersion"

    // Assertions
    testImplementation "androidx.test.ext:truth:$androidxTruthExtVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "org.hamcrest:hamcrest:$hamcrestVersion"
}
